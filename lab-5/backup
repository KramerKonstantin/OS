#!/bin/bash

backupFolders=$(ls $HOME/*/ | grep -o -E "Backup-[0-9]{4}-[0-9]{2}-[0-9]{2}")

lastBackupDateInSeconds=0
lastBackupFolder=""

if [[ $backupFolders ]]
then
  	lastBackupFolder=$(echo "$backupFolders" | tail -1)
  	lastBackupDate=$(echo "$lastBackupFolder" | grep -o -E "[0-9]{4}-[0-9]{2}-[0-9]{2}")
  	lastBackupDateInSeconds=$(date -d $lastBackupDate +%s)
fi

currentDate=`date +%Y-%m-%d`
currentDateInSeconds=$(date -d $currentDate +%s)

backupFolder=""
newFolderWasCreated=false

if [[ $currentDateInSeconds -gt $lastBackupDateInSeconds+7*24*60*60 ]]
then
  	backupFolder="$HOME/Backup-$currentDate"
  	mkdir $backupFolder
  	newFolderWasCreated=true
else
  	backupFolder="$HOME/$lastBackupFolder"
fi

sourceFolder="$HOME/source"

if [[ ! -d "$sourceFolder" ]]
then
	echo "No source folder, aborting"
	exit
fi

reportFilename="$HOME/backup-report"

cd "$sourceFolder"

files=$(find . -type f)

if [[ $newFolderWasCreated == true ]]
then
	echo "$backupFolder created at $currentDate" >> $reportFilename
	for filename in $files
		do
    			cp --parents "$filename" "$backupFolder/"
    			echo "$filename copied to $backupFolder at $currentDate" >> $reportFilename
  		done
else
	for filename in $files
		do
    			if [[ -e "$backupFolder/$filename" ]]
			then
      				oldFileSize=$(stat -c%s "$backupFolder/$filename")
      				newFileSize=$(stat -c%s "$sourceFolder/$filename")
      
      				if [[ $oldFileSize -ne $newFileSize ]]; then
        				mv "$backupFolder/$filename" "$backupFolder/$filename.$currentDate"
        				cp "$sourceFolder/$filename" "$backupFolder/$filename"
        
        				echo "$filename was renamed to $filename.$currentDate $currentDate" >> $reportFilename
        				echo "$filename copied to $backupFolder at $currentDate" >> $reportFilename
      				fi
    			else
      				cp --parents "$filename" "$backupFolder/"
      				echo "$filename copied to $backupFolder at $currentDate" >> $reportFilename
    			fi
  		done
fi
